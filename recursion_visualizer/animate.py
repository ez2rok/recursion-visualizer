# AUTOGENERATED! DO NOT EDIT! File to edit: ../02_animate.ipynb.

# %% auto 0
__all__ = ['get_edges']

# %% ../02_animate.ipynb 3
def get_edges(nodes, history, edge_labels):
  """get edges from preorder travrsal
  inspired by: https://leetcode.com/problems/recover-a-tree-from-preorder-traversal/discuss/274621/JavaC%2B%2BPython-Iterative-Stack-Solution"""
  
  # extract the preorder traversal from the nodes
  preorder, seen = [], set()
  for id_ in history:
      if id_ not in seen:
          seen.add(id_)
          preorder.append(id_)
  
  # extract the edges from the preorder traversal by analyzing the depth
  edge_to_label = {}
  stack = []
  for id_ in preorder:
    while len(stack) > nodes[id_].depth:
      stack.pop()
    if stack:
      edge_to_label[(stack[-1], id_)] = edge_labels[id_]
    stack.append(id_)
  return edge_to_label
